#ifndef _NANOFS_GLOBAL_SETTINGS_H_
#define _NANOFS_GLOBAL_SETTINGS_H_

#define SUPERBLOCK 1

#define BLOCK_SIZE 4096
#define MAX_DISK_SIZE ((int64_t)1024*1024*1024)
#define BLOCKS_COUNT ((int64_t)(MAX_DISK_SIZE / BLOCK_SIZE))
#define BLOCK_FREE_LIST_DIMENSION ((int64_t)((BLOCKS_COUNT / 8) + \
					     ((BLOCKS_COUNT % 8) ? 1 : 0)))

#define BLOCK_FREE_LIST_BLOCKSIZE ((int64_t)((BLOCK_FREE_LIST_DIMENSION / BLOCK_SIZE) + \
					     ((BLOCK_FREE_LIST_DIMENSION % BLOCK_SIZE) ? 1 : 0)))
#define INODE_LINKS 64
#define INODE_COUNT_IDEAL ((int64_t)((BLOCKS_COUNT / INODE_LINKS) + ((BLOCKS_COUNT % INODE_LINKS) ? 1 : 0)))

#define INODE_INDEX_MAP_BLOCKSIZE ((int64_t)((INODE_COUNT_IDEAL / BLOCK_SIZE) + ((INODE_COUNT_IDEAL % BLOCK_SIZE) ? 1 : 0) ))
#define INODE_INDEX_MAP_DIMENSION ((int64_t)((INODE_COUNT_IDEAL / 8) + ((INODE_COUNT_IDEAL % 8) ? 1 : 0)))
// 
#define PROTECTED_BLOCKS ((int64_t)(SUPERBLOCK+BLOCK_FREE_LIST_BLOCKSIZE+INODE_COUNT_IDEAL+INODE_INDEX_MAP_BLOCKSIZE))

#define INODE_COUNT ((int64_t) (INODE_COUNT_IDEAL - SUPERBLOCK - INODE_INDEX_MAP_BLOCKSIZE - INODE_INDEX_MAP_BLOCKSIZE))

#define MAX_FILENAME 8

#endif
